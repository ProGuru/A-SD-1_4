#include <iostream>
#include <cstring> // для работы с strlen

// (A ⋂ B ⋂ C) U D. В работе данной программы предполагается, что в каждом из заданных множеств нет повторяющихся элементов

int main()
{
    char Uni[] = {"0123456789ABCDEF"}; // множество - универсум
    const int Nmax = 16; // максимальное количество элементов во множестве
    char A[] = {'1', '8', 'F', '\0'}; // множество А. Обязательно в конце массива добавляем завершающий нуль-символ
    char B[] = {'2','8', '5', 'D', 'F', '\0'}; // множество B. Обязательно в конце массива добавляем завершающий нуль-символ
    char C[] = {'1', '2', '6', '8', 'F', '\0'}; // множество C. Обязательно в конце массива добавляем завершающий нуль-символ
    char D[] = {'1', '8', '9', 'B', '\0'}; // множество D. Обязательно в конце массива добавляем завершающий нуль-символ
    char E[Nmax]; // результат вычисления

    // поиск одинаковых элементов во множествах А, В и С
    int k = 0; // счётчик для индексирования злементов во множество E
    for (int i = 0; i < strlen(A); i++)
    {
        for (int j = 0; j < strlen(B); j++)
        {
            for (int l = 0; l < strlen(C); l++)
            {
                if ((A[i] == B[j]) && (B[j] == C[l]) && (A[i] == C[l]))
                {
                    E[k] = A[i]; // здесь можно было бы присвоить B[j] или C[l]
                    k++; // индекс для множества E
                }
                
            }
            
        }
        
        
    }

    // Добавляем к полученному множеству множество D
    bool v = true;
    for (int i = 0; i < strlen(D); i++)
    {
        for (int j = 0; j < k; j++)
        {
            if (D[i] == E[j])
            {
                v = false;
            }
            
        }
        if (v) // Если во множествах D и E есть есть отличающийся элемент...
        {
            E[k] = D[i]; // ...то он попадает в конец массива.
            k++;
        }
        v = true; // "сбрасываем" наш индикатор


    }

    // Вывод на экран полученного множества
    for (int i = 0; i < k; i++)
    {
        std::cout << E[i] << " ";
    }
    
    return 0;
}